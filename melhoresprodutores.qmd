---
title: ""
format: html
editor: visual
---

# AN√ÅLISE ESTAT√çSTICA PARA AS ATIVIDADES ENZIM√ÅTICAS

## Delineamento Experimental e Conjunto de dados:

Nossos dados comportam a atividade enzim√°tica da cole√ß√£o f√∫ngica CMPC coletados no Sul do Brasil.

-   A planilha excel cont√©m dados de 53 isolados induzidos em 3 diferentes substratos, dos quais vamos quantificar a express√£o de 7 enzimas.
-   2 r√©plicas por isolado, cada uma com 3 erlenmeyers.

# üìä Metodologia estat√≠stica aplicada:

## Sele√ß√£o dos melhores produtores utilizando apenas m√©dia simples

Essa sele√ß√£o foi feita utilizando apenas as maiores atividades m√©dias por enzima desconsiderando o fator biomassa:

Esse c√≥digo exporta a tabela de maiores m√©dias demonstrando (enzima + isolado + m√©dia de atividade+ biomassa) + gr√°fico de barras empilhadas por enzima analisada.

```{r}
# Carregar pacotes necess√°rios
library(readxl)
library(dplyr)
library(ggplot2)
library(openxlsx)

# Ler os dados
dados <- read_excel("at_enz.xlsx")

# Calcular m√©dia de atividade por Enzima, Isolado e Biomassa
media_atividade_com_biomassa <- dados %>%
  group_by(Enzima, Isolado, Biomassa) %>%
  summarise(Media_Atividade = mean(Atividade, na.rm = TRUE), .groups = "drop")

# Calcular a m√©dia geral por Enzima e Isolado (sem considerar biomassa)
media_atividade <- media_atividade_com_biomassa %>%
  group_by(Enzima, Isolado) %>%
  summarise(Media_Atividade = mean(Media_Atividade), .groups = "drop")

# Selecionar top 3 isolados por enzima
top_isolados <- media_atividade %>%
  group_by(Enzima) %>%
  slice_max(order_by = Media_Atividade, n = 3) %>%
  arrange(Enzima, desc(Media_Atividade)) %>%
  ungroup()

# Para cada top isolado, identificar qual biomassa teve maior m√©dia
biomassa_destaque <- media_atividade_com_biomassa %>%
  semi_join(top_isolados, by = c("Enzima", "Isolado")) %>%
  group_by(Enzima, Isolado) %>%
  slice_max(order_by = Media_Atividade, n = 1) %>%
  select(Enzima, Isolado, Biomassa)

# Juntar com a tabela final
resultado_final <- top_isolados %>%
  left_join(biomassa_destaque, by = c("Enzima", "Isolado"))

# Exportar para Excel
write.xlsx(resultado_final, "top_isolados_com_biomassa_destaque.xlsx")

# Criar gr√°ficos para cada enzima
enzimas <- unique(dados$Enzima)

dir.create("graficos", showWarnings = FALSE)  # Pasta para salvar os gr√°ficos

for (enz in enzimas) {
  dados_grafico <- dados %>%
    filter(Enzima == enz) %>%
    group_by(Isolado, Biomassa) %>%
    summarise(Media = mean(Atividade, na.rm = TRUE), .groups = "drop")
  
  p <- ggplot(dados_grafico, aes(x = factor(Isolado), y = Media, fill = Biomassa)) +
    geom_bar(stat = "identity", position = "stack") +
    labs(title = paste("Atividade m√©dia por biomassa -", enz),
         x = "Isolado",
         y = "Atividade M√©dia") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  # Salvar gr√°fico
  ggsave(filename = paste0("graficos/", enz, "_grafico.png"),
         plot = p, width = 8, height = 5)
}

```

## Sele√ß√£o utilizando estat√≠stica robusta e compara√ß√£o de m√©dias

Esse c√≥digo:

-   Faz an√°lise para cada enzima.

-   Detecta se ANOVA+Tukey ou Kruskal+Dunn √© adequado.

-   Seleciona top 5 isolados (baseado na m√©dia da melhor biomassa).

-   No gr√°fico, barras s√£o coloridas pela biomassa da melhor m√©dia.

-   Asterisco vermelho indica isolados significativamente diferentes do melhor isolado.

-   Exporta uma tabela com isolado, biomassa, m√©dia e asterisco.

```{r}
# Pacotes necess√°rios
library(readxl)
library(dplyr)
library(ggpubr)
library(rstatix)
library(ggplot2)
library(openxlsx)
library(patchwork)

# Ler os dados
dados <- read_excel("at_enz.xlsx")

# Converter vari√°veis para fator
dados <- dados %>%
  mutate(
    Enzima = as.factor(Enzima),
    Isolado = as.factor(Isolado),
    Biomassa = as.factor(Biomassa),
    Tubo = as.factor(Tubo),
    Repeticao = as.factor(Repeticao)
  )

# Objeto para armazenar os melhores isolados por estat√≠stica e biomassa
tabela_melhores <- data.frame()

# Loop por enzima
for (enzima in unique(dados$Enzima)) {
  cat("\n\n===== Enzima:", enzima, "=====\n")
  
  subdados <- dados %>% filter(Enzima == enzima)
  
  # Calcular m√©dia da atividade por Isolado e Biomassa
  medias <- subdados %>%
    group_by(Isolado, Biomassa) %>%
    summarise(Media_Atividade = mean(Atividade, na.rm = TRUE), .groups = "drop")
  
  # Para cada isolado, escolher a biomassa com maior m√©dia
  melhores <- medias %>%
    group_by(Isolado) %>%
    slice_max(order_by = Media_Atividade, n = 1) %>%
    ungroup()
  
  # Ordenar pelo topo 5 isolados
  melhores <- melhores %>%
    arrange(desc(Media_Atividade)) %>%
    slice_head(n = 5)
  
  # Teste de normalidade
  shapiro_p <- tryCatch({
    shapiro_test(subdados, Atividade)$p
  }, error = function(e) {
    NA
  })
  
  # Teste de homogeneidade de vari√¢ncias (Levene)
  levene_p <- tryCatch({
    levene_test(subdados, Atividade ~ Isolado)$p
  }, error = function(e) {
    NA
  })
  
  cat("Shapiro-Wilk p-valor:", shapiro_p, "\n")
  cat("Levene p-valor:", levene_p, "\n")
  
  if (!is.na(shapiro_p) && !is.na(levene_p) && shapiro_p > 0.05 && levene_p > 0.05) {
    cat("‚Üí Dados normais e homog√™neos: ANOVA + Tukey\n")
    
    anova <- aov(Atividade ~ Isolado, data = subdados)
    tukey <- TukeyHSD(anova)
    
    tukey_df <- as.data.frame(tukey$Isolado)
    tukey_df$Comparacao <- rownames(tukey_df)
    
    melhor_isolado <- melhores$Isolado[1]
    
    # Isolados que diferem significativamente do melhor isolado
    comparacoes_relevantes <- tukey_df %>%
      filter(grepl(melhor_isolado, Comparacao)) %>%
      mutate(
        outro_isolado = ifelse(grepl(melhor_isolado, Comparacao),
                              sub(".*-", "", Comparacao),
                              sub("-.*", "", Comparacao)),
        signif = `p.adj` < 0.05
      )
    
    isolados_significativos <- comparacoes_relevantes %>%
      filter(signif == TRUE) %>%
      pull(outro_isolado) %>%
      unique()
    
    melhores <- melhores %>%
      mutate(asterisco = ifelse(Isolado %in% isolados_significativos, "*", ""))
    
  } else {
    cat("‚Üí Dados n√£o normais e/ou heterog√™neos: Kruskal-Wallis + Dunn\n")
    
    kruskal <- kruskal_test(subdados, Atividade ~ Isolado)
    print(kruskal)
    
    dunn <- dunn_test(subdados, Atividade ~ Isolado, p.adjust.method = "bonferroni")
    
    melhor_isolado <- melhores$Isolado[1]
    
    # Isolados que diferem significativamente do melhor isolado (p.adj < 0.05)
    isolados_significativos <- dunn %>%
      filter((group1 == melhor_isolado | group2 == melhor_isolado) & p.adj < 0.05) %>%
      mutate(outro_isolado = ifelse(group1 == melhor_isolado, group2, group1)) %>%
      pull(outro_isolado) %>%
      unique()
    
    melhores <- melhores %>%
      mutate(asterisco = ifelse(Isolado %in% isolados_significativos, "*", ""))
  }
  
  # Gr√°fico
  p <- ggplot(melhores, aes(x = reorder(Isolado, -Media_Atividade), y = Media_Atividade, fill = Biomassa)) +
    geom_col() +
    geom_text(aes(label = asterisco), vjust = -0.5, size = 8, color = "red") +
    labs(title = paste("Top 5 Isolados -", enzima),
         x = "Isolado", y = "M√©dia de Atividade", fill = "Biomassa") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  print(p)
  
  # Adicionar coluna de enzima para exporta√ß√£o
  melhores$Enzima <- enzima
  
  # Juntar na tabela final
  tabela_melhores <- bind_rows(tabela_melhores, melhores)
}

# Exportar tabela final com melhores isolados, biomassa e indica√ß√£o de signific√¢ncia
write.xlsx(tabela_melhores, "melhores_isolados_por_estatistica.xlsx", rownames = FALSE)


```

## Visualiza√ß√£o dos melhores isolados

Esse c√≥digo cria um gr√°fico facetado com as m√©dias dos melhores isolados por enzima.

```{r}

# Gr√°fico facetado com todos os melhores isolados
library(readxl)
library(ggplot2)

# Ler arquivo Excel - substitua "dados.xlsx" pelo nome do seu arquivo
df <- read_excel("melhores_isolados_por_estatistica.xlsx")

# Mostrar as primeiras linhas para conferir os dados
head(df)

# Criar gr√°fico de barras facetado com eixos independentes
nomes_enzyme <- c(
  "xil" = "Xilanase",
  "endog" = "Endoglucanase",
  "fpa" = "FPase",
  "lac" = "Lacase",
  "bgli" = "Œ≤ glicosidase",
  "bxil" = "Œ≤ xilosidase",
  "mangper" = "Mangan√™s peroxidase"
)

ggplot(df, aes(x = Isolado, y = Media_Atividade, fill = Biomassa)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
  facet_wrap(~ Enzima, scales = "free", labeller = labeller(Enzima = nomes_enzyme)) +
  labs(
    title = "M√©dias agrupadas por Biomassa",
    fill = "Biomassa",
    caption = "Fonte: Elaborado pela autora, 2025."
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )

```

## Visualiza√ß√£o da identifica√ß√£o a nivel de g√™nero

Quanto a identifica√ß√£o a nivel de g√™nero:

```{r}
# Instalar pacotes, se ainda n√£o tiver
if (!require(readxl)) install.packages("readxl")
if (!require(ggplot2)) install.packages("ggplot2")

library(readxl)
library(ggplot2)

# 1. Carregar o arquivo Excel
# Substitua "arquivo.xlsx" pelo nome real do seu arquivo
dados_tax <- read_excel("cap1.xlsx", sheet = 2)

# 2. Verificar as colunas (opcional)
head(dados_tax)
colnames(dados_tax)

# 3. Calcular a frequ√™ncia dos filos
freq_ordem <- as.data.frame(table(dados_tax$ordem))
colnames(freq_ordem) <- c("ordem", "frequencia")

# 4. Calcular a porcentagem
freq_ordem$porcentagem <- round(100 * freq_ordem$frequencia / sum(freq_ordem$frequencia), 1)

# 5. Criar r√≥tulo para a legenda
freq_ordem$label <- paste0(freq_ordem$ordem, " (", freq_ordem$porcentagem, "%)")

# 6. Gerar o gr√°fico de pizza
ggplot(freq_ordem, aes(x = "", y = frequencia, fill = label)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(caption = "Fonte: Betim, 2025.") +
  theme_void() +
  theme(legend.position = "right") +
  guides(fill = guide_legend(title = "Ordem"))


```

# ANALISE ESTAT√çSTICA PARA A BIODEGRADA√á√ÉO ACELERADA

## Delineamento Experimental e Conjunto de Dados

Nossos dados comportam dados das propriedades fisicas da madeira degradada com isolados selecionados na cole√ß√£o f√∫ngica CMPC coletados no Sul do Brasil.

-   A planilha excel cont√©m dados de 23 isolados induzidos em 3 diferentes substratos, dos quais vamos quantificar a perda de massa, a perda de dureza em rela√ß√£o ao controle negativo e a perda de densidade aparente;
-   3 r√©plicas por isolado, cada uma com 3 cavacos.

### üìå‚úÖ **O que esse script faz?**

1.  **Carregamento de pacotes** apropriados para an√°lise estat√≠stica e visualiza√ß√£o.

2.  **Importa√ß√£o de dados** do Excel.

3.  **Fun√ß√£o gen√©rica** que: executa ANOVA, realiza o teste de Tukey, se todas as premissas forem atendidas, e no caso de violadas executa teste n√£o param√©trico, extrai letras de signific√¢ncia com `multcompLetters4`, gera gr√°fico de barras com m√©dias e letras.

4.  **Execu√ß√£o da fun√ß√£o** para m√∫ltiplas vari√°veis com diferentes r√≥tulos de eixo Y.

```{# === 0. Carregar pacotes ===}
library(readxl)
library(dplyr)
library(ggplot2)
library(multcompView)
library(agricolae)
library(FSA)
library(car)
library(Polychrome)

# === 1. Carregar os dados ===
dados <- read_excel("teste_deg.xlsx")
dados$tratamento <- as.factor(dados$tratamento)

# === 2. Fun√ß√£o de an√°lise completa ===
analise_variavel <- function(dados, variavel, y_label) {
  dados_var <- dados %>% filter(!is.na(.data[[variavel]]))
  formula <- as.formula(paste(variavel, "~ tratamento"))
  
  modelo <- aov(formula, data = dados_var)
  residuos <- residuals(modelo)
  
  # === Testes de premissas ===
  shapiro_result <- shapiro.test(residuos)
  levene_result <- leveneTest(formula, data = dados_var)
  
  shapiro_p <- shapiro_result$p.value
  levene_p <- levene_result$`Pr(>F)`[1]

  cat("\n=== An√°lise para", variavel, "===\n")
  cat("‚Üí Teste de Normalidade (Shapiro-Wilk):\n")
  print(shapiro_result)

  cat("\n‚Üí Teste de Homocedasticidade (Levene):\n")
  print(levene_result)

  # === Diagn√≥stico visual dos res√≠duos ===
  cat("\n‚Üí Gr√°ficos de diagn√≥stico dos res√≠duos\n")
  par(mfrow = c(1, 2))
  plot(residuos, main = paste("Res√≠duos -", variavel), ylab = "Res√≠duos")
  abline(h = 0, col = "red", lty = 2)
  qqnorm(residuos, main = paste("QQ-Plot -", variavel))
  qqline(residuos, col = "red")
  par(mfrow = c(1, 1))

  # Caminho 1: Premissas atendidas ‚Üí Scott-Knott
  if (shapiro_p > 0.05 & levene_p > 0.05) {
    cat("\n‚Üí Premissas atendidas: usando ANOVA + Scott-Knott\n")
    print(summary(modelo))
    
    scott <- agricolae::scott.test(modelo, "tratamento", group = TRUE, console = TRUE)
    
    letras_df <- scott$groups %>%
      mutate(tratamento = rownames(.)) %>%
      select(tratamento, grupo = groups)
  
  # Caminho 2: Premissas violadas ‚Üí Kruskal + Dunn
  } else {
    cat("\n‚Üí Premissas violadas: usando Kruskal-Wallis + Dunn\n")
    kruskal_res <- kruskal.test(formula, data = dados_var)
    print(kruskal_res)
    
    dunn <- dunnTest(formula, data = dados_var, method = "bonferroni")
    comp <- dunn$res
    
    tratamentos <- levels(dados_var$tratamento)
    p_mat <- matrix(NA, nrow=length(tratamentos), ncol=length(tratamentos),
                    dimnames = list(tratamentos, tratamentos))
    
    for (i in 1:nrow(comp)) {
      pares <- strsplit(as.character(comp$Comparison[i]), " - ")[[1]]
      p_valor <- comp$P.adj[i]
      p_mat[pares[1], pares[2]] <- p_valor
      p_mat[pares[2], pares[1]] <- p_valor
    }
    
    letras <- multcompLetters(p_mat, threshold = 0.05)
    letras_df <- data.frame(tratamento = names(letras$Letters),
                            grupo = letras$Letters)
  }

  # === Calcular m√©dias e unir com grupos ===
  medias <- dados_var %>%
    group_by(tratamento) %>%
    summarise(media = mean(.data[[variavel]], na.rm = TRUE)) %>%
    left_join(letras_df, by = "tratamento")

  # === Identificar grupos √∫nicos e marcar com asterisco ===
  grupo_freq <- table(medias$grupo)
  medias <- medias %>%
    mutate(asterisco = ifelse(grupo_freq[grupo] == 1, "*", ""))

  # === Ordenar tratamentos por m√©dia decrescente ===
  medias <- medias %>%
    arrange(desc(media)) %>%
    mutate(tratamento = factor(tratamento, levels = tratamento))

  # === Cores com Polychrome (36 cores com alto contraste) ===
  grupos_unicos <- sort(unique(medias$grupo))
  paleta <- palette36.colors(length(grupos_unicos))
  cores <- setNames(paleta, grupos_unicos)

  # === Gr√°fico ===
  grafico <- ggplot(medias, aes(x = tratamento, y = media, fill = grupo)) +
    geom_col(width = 0.7) +
    geom_text(aes(label = asterisco), vjust = -0.8, size = 6, color = "black") +
    scale_fill_manual(values = cores) +
    labs(
      title = paste("M√©dia de", y_label, "por Tratamento"),
      x = "Tratamento",
      y = y_label,
      fill = "Grupo"
    ) +
    coord_flip() +
    theme_minimal() +
    theme(
      text = element_text(size = 12),
      plot.title = element_text(hjust = 0.5, face = "bold")
    )
  
  print(grafico)
}

# === 3. Rodar an√°lises ===
analise_variavel(dados, "pm",  "Perda de Massa (PM)")
analise_variavel(dados, "pdr", "Perda de Dureza Relativa (PDR)")
analise_variavel(dados, "pds", "Perda de Densidade Aparente (PDS)")


```

### üìå **1. Vari√°vel: `pm` ‚Äì Perda de Massa**

-   **Shapiro-Wilk**:

```         
-    W = 0.94606  -    p = **3.228e-08** ‚Üí ‚ùå Viola√ß√£o da normalidade
```

-   **Levene (homocedasticidade)**:

```         
-    F = 4.3557  -    p = **2.154e-09** ‚Üí ‚ùå Viola√ß√£o da homogeneidade de vari√¢ncias
```

-   **Decis√£o**: Premissas violadas ‚Üí Kruskal-Wallis + Dunn

-   **Kruskal-Wallis**:

```         
-    œá¬≤ = 109.39, gl = 23  -    p = **3.229e-13** ‚Üí ‚úÖ Diferen√ßa significativa entre tratamentos
```

### üìå **2. Vari√°vel: `pdr` ‚Äì Perda de Dureza Relativa**

-   **Shapiro-Wilk**:

```         
-    W = 0.93213  -   p = **1.413e-09** ‚Üí ‚ùå Viola√ß√£o da normalidade
```

-   **Levene**:

```         
-    F = 0.8714  -    p = **0.6371** ‚Üí ‚úÖ Homocedasticidade aceita
```

-   **Decis√£o**: Mesmo com vari√¢ncias homog√™neas, a normalidade foi violada ‚Üí Kruskal-Wallis + Dunn

-   **Kruskal-Wallis**:

```         
-    œá¬≤ = 36.85, gl = 23  -    p = **0.0337** ‚Üí ‚úÖ Diferen√ßa significativa (moderada)
```

### üìå **3. Vari√°vel: `pds` ‚Äì Perda de Densidade Aparente**

-   **Shapiro-Wilk**:

```         
-    W = 0.94844  -    p = **6.066e-08** ‚Üí ‚ùå Viola√ß√£o da normalidade
```

-   **Levene**:

```         
-    F = 5.0554  -    p = **2.486e-11** ‚Üí ‚ùå Viola√ß√£o da homocedasticidade
```

-   **Decis√£o**: Premissas violadas ‚Üí Kruskal-Wallis + Dunn

-   **Kruskal-Wallis**:

```         
-    œá¬≤ = 108.57, gl = 23  -    p = **4.509e-13** ‚Üí ‚úÖ Diferen√ßa altamente significativa
```

## üß™ **Conclus√£o T√©cnica**

| Vari√°vel | Normalidade | Homocedasticidade | Teste Utilizado | Resultado |
|---------------|---------------|---------------|---------------|---------------|
| `pm` | ‚ùå | ‚ùå | Kruskal-Wallis + Dunn | **Significativo** |
| `pdr` | ‚ùå | ‚úÖ | Kruskal-Wallis + Dunn | **Significativo** |
| `pds` | ‚ùå | ‚ùå | Kruskal-Wallis + Dunn | **Significativo** |

## üìå Observa√ß√£o

-   **Premissas violadas** ‚Üí teste **n√£o param√©trico**.

-   O script est√° **automatizado, robusto e confi√°vel**.

-   Os resultados indicam que **os tratamentos influenciam significativamente** nas tr√™s vari√°veis avaliadas.

```{r}
# === 0. Carregar pacotes ===
library(readxl)
library(dplyr)
library(ggplot2)
library(multcompView)
library(agricolae)
library(FSA)
library(car)
library(Polychrome)

# === 1. Carregar os dados ===
dados <- read_excel("teste_deg.xlsx")
dados$tratamento <- as.factor(dados$tratamento)

# === 2. Fun√ß√£o de an√°lise completa ===
analise_variavel <- function(dados, variavel, y_label) {
  dados_var <- dados %>% filter(!is.na(.data[[variavel]]))
  formula <- as.formula(paste(variavel, "~ tratamento"))
  
  modelo <- aov(formula, data = dados_var)
  residuos <- residuals(modelo)
  
  # === Testes de premissas ===
  shapiro_result <- shapiro.test(residuos)
  levene_result <- leveneTest(formula, data = dados_var)
  
  shapiro_p <- shapiro_result$p.value
  levene_p <- levene_result$`Pr(>F)`[1]

  cat("\n=== An√°lise para", variavel, "===\n")
  cat("‚Üí Teste de Normalidade (Shapiro-Wilk):\n")
  print(shapiro_result)

  cat("\n‚Üí Teste de Homocedasticidade (Levene):\n")
  print(levene_result)

  # === Diagn√≥stico visual dos res√≠duos ===
  cat("\n‚Üí Gr√°ficos de diagn√≥stico dos res√≠duos\n")
  par(mfrow = c(1, 2))
  plot(residuos, main = paste("Res√≠duos -", variavel), ylab = "Res√≠duos")
  abline(h = 0, col = "red", lty = 2)
  qqnorm(residuos, main = paste("QQ-Plot -", variavel))
  qqline(residuos, col = "red")
  par(mfrow = c(1, 1))

  # Caminho 1: Premissas atendidas ‚Üí Scott-Knott
  if (shapiro_p > 0.05 & levene_p > 0.05) {
    cat("\n‚Üí Premissas atendidas: usando ANOVA + Scott-Knott\n")
    print(summary(modelo))
    
    scott <- agricolae::scott.test(modelo, "tratamento", group = TRUE, console = TRUE)
    
    letras_df <- scott$groups %>%
      mutate(tratamento = rownames(.)) %>%
      select(tratamento, grupo = groups)
  
  # Caminho 2: Premissas violadas ‚Üí Kruskal + Dunn
  } else {
    cat("\n‚Üí Premissas violadas: usando Kruskal-Wallis + Dunn\n")
    kruskal_res <- kruskal.test(formula, data = dados_var)
    print(kruskal_res)
    
    dunn <- dunnTest(formula, data = dados_var, method = "bonferroni")
    comp <- dunn$res
    
    tratamentos <- levels(dados_var$tratamento)
    p_mat <- matrix(NA, nrow=length(tratamentos), ncol=length(tratamentos),
                    dimnames = list(tratamentos, tratamentos))
    
    for (i in 1:nrow(comp)) {
      pares <- strsplit(as.character(comp$Comparison[i]), " - ")[[1]]
      p_valor <- comp$P.adj[i]
      p_mat[pares[1], pares[2]] <- p_valor
      p_mat[pares[2], pares[1]] <- p_valor
    }
    
    letras <- multcompLetters(p_mat, threshold = 0.05)
    letras_df <- data.frame(tratamento = names(letras$Letters),
                            grupo = letras$Letters)
  }

  # === Calcular m√©dias e unir com grupos ===
  medias <- dados_var %>%
    group_by(tratamento) %>%
    summarise(media = mean(.data[[variavel]], na.rm = TRUE)) %>%
    left_join(letras_df, by = "tratamento")

  # === Identificar grupos √∫nicos e marcar com asterisco ===
  grupo_freq <- table(medias$grupo)
  medias <- medias %>%
    mutate(asterisco = ifelse(grupo_freq[grupo] == 1, "*", ""))

  # === Ordenar tratamentos por m√©dia decrescente ===
  medias <- medias %>%
    arrange(desc(media)) %>%
    mutate(tratamento = factor(tratamento, levels = tratamento))

  # === Marcar tratamentos relacionados ao controle negativo (cn) ===
  grupo_cn <- medias %>% filter(tratamento == "CN") %>% pull(grupo)

  medias <- medias %>%
    mutate(
      destaque = case_when(
        tratamento == "cn" ~ "Controle Negativo",
        grupo == grupo_cn  ~ "Mesmo Grupo que CN",
        TRUE               ~ "Outros"
      )
    )

  # === Cores espec√≠ficas para destaque ===
  cores_destaque <- c(
    "Controle Negativo" = "#D73027",      # vermelho
    "Mesmo Grupo que CN" = "#FC8D59",     # laranja claro
    "Outros" = "#91BFDB"                  # azul claro
  )

  # === Gr√°fico ===
  grafico <- ggplot(medias, aes(x = tratamento, y = media, fill = destaque)) +
    geom_col(width = 0.7) +
    geom_text(aes(label = asterisco), vjust = -0.8, size = 6, color = "black") +
    scale_fill_manual(values = cores_destaque) +
    labs(
      title = paste("M√©dia de", y_label, "por Tratamento"),
      x = "Tratamento",
      y = y_label,
      fill = "Destaque"
    ) +
    coord_flip() +
    theme_minimal() +
    theme(
      text = element_text(size = 12),
      plot.title = element_text(hjust = 0.5, face = "bold")
    )

  print(grafico)
}

# === 3. Rodar an√°lises ===
analise_variavel(dados, "pm",  "Perda de Massa (PM)")
analise_variavel(dados, "pdr", "Perda de Dureza Relativa (PDR)")
analise_variavel(dados, "pds", "Perda de Densidade Aparente (PDS)")

```

No gr√°fico 1, o Controle Negativo ficou isolado nos grupos de significancia oque demontra uma confiabilidade na an√°lise; os fungos 24 e e 42 ambos com maior perda de massa que o controle, ficaram isolados em grupos de significancia do restante dos grupos, o fungo LT est√° isolado e, destacando-se com um valor muito acima da maioria das m√©dias dos tratamentos.

No gr√°fico 2, os tratamentos ficaram a maioria dentro do mesmo grupo de significancia do controle negativo, oque demontra que essa an√°lise √© mais sensivel, a perda de dureza est√° relacionada com a resist√™ncia mec√¢nica da madeira, ps fungos 50, 36 e 26 ficaram em outros grupos de significancia, entretanto, todos tiveram medias menores que o controle negativo. O tratamento LT pelo contr√°rio, demonstra que ficou em um grupo de significancia distinto do controle e causou a maior media de perda de dureza da madeira, essa an√°lise demontra que o fungo degradou a madeira de forma eficiente a afetar componentes estruturais que conferem resistencia a madeira.

No gr√°fico 3, nota-se que o controle negativo assim como no gr√°fico da perda de massa ficou isolado em um grupo de significancia, os tratamentos que ficaram isolados dos demais com medias acima do CN foram: 53, 27, 24 e 42, em rela√ß√£o a maior m√©dia o fungo LT continua apresentando os melhores resultados. Em conformidade com todas as an√°lises.
