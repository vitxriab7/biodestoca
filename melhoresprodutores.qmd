---
title: ""
format: html
editor: visual
---

# AN√ÅLISE ESTAT√çSTICA PARA AS ATIVIDADES ENZIM√ÅTICAS

## Delineamento Experimental e Conjunto de dados:

Nossos dados comportam a atividade enzim√°tica da cole√ß√£o f√∫ngica CMPC coletados no Sul do Brasil.

-   A planilha excel cont√©m dados de 53 isolados induzidos em 3 diferentes substratos, dos quais vamos quantificar a express√£o de 7 enzimas.
-   2 r√©plicas por isolado, cada uma com 3 erlenmeyers.

# üìä Metodologia estat√≠stica aplicada:

## Sele√ß√£o dos melhores produtores utilizando apenas m√©dia simples

Essa sele√ß√£o foi feita utilizando apenas as maiores atividades m√©dias por enzima desconsiderando o fator biomassa:

Esse c√≥digo exporta a tabela de maiores m√©dias demonstrando (enzima + isolado + m√©dia de atividade+ biomassa) + gr√°fico de barras empilhadas por enzima analisada.

```{r}
# Carregar pacotes necess√°rios
library(readxl)
library(dplyr)
library(ggplot2)
library(openxlsx)

# Ler os dados
dados <- read_excel("at_enz.xlsx")

# Calcular m√©dia de atividade por Enzima, Isolado e Biomassa
media_atividade_com_biomassa <- dados %>%
  group_by(Enzima, Isolado, Biomassa) %>%
  summarise(Media_Atividade = mean(Atividade, na.rm = TRUE), .groups = "drop")

# Calcular a m√©dia geral por Enzima e Isolado (sem considerar biomassa)
media_atividade <- media_atividade_com_biomassa %>%
  group_by(Enzima, Isolado) %>%
  summarise(Media_Atividade = mean(Media_Atividade), .groups = "drop")

# Selecionar top 3 isolados por enzima
top_isolados <- media_atividade %>%
  group_by(Enzima) %>%
  slice_max(order_by = Media_Atividade, n = 3) %>%
  arrange(Enzima, desc(Media_Atividade)) %>%
  ungroup()

# Para cada top isolado, identificar qual biomassa teve maior m√©dia
biomassa_destaque <- media_atividade_com_biomassa %>%
  semi_join(top_isolados, by = c("Enzima", "Isolado")) %>%
  group_by(Enzima, Isolado) %>%
  slice_max(order_by = Media_Atividade, n = 1) %>%
  select(Enzima, Isolado, Biomassa)

# Juntar com a tabela final
resultado_final <- top_isolados %>%
  left_join(biomassa_destaque, by = c("Enzima", "Isolado"))

# Exportar para Excel
write.xlsx(resultado_final, "top_isolados_com_biomassa_destaque.xlsx")

# Criar gr√°ficos para cada enzima
enzimas <- unique(dados$Enzima)

dir.create("graficos", showWarnings = FALSE)  # Pasta para salvar os gr√°ficos

for (enz in enzimas) {
  dados_grafico <- dados %>%
    filter(Enzima == enz) %>%
    group_by(Isolado, Biomassa) %>%
    summarise(Media = mean(Atividade, na.rm = TRUE), .groups = "drop")
  
  p <- ggplot(dados_grafico, aes(x = factor(Isolado), y = Media, fill = Biomassa)) +
    geom_bar(stat = "identity", position = "stack") +
    labs(title = paste("Atividade m√©dia por biomassa -", enz),
         x = "Isolado",
         y = "Atividade M√©dia") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  # Salvar gr√°fico
  ggsave(filename = paste0("graficos/", enz, "_grafico.png"),
         plot = p, width = 8, height = 5)
}

```

## Sele√ß√£o utilizando estat√≠stica robusta e compara√ß√£o de m√©dias

Esse c√≥digo:

-   Faz an√°lise para cada enzima.

-   Detecta se ANOVA+Tukey ou Kruskal+Dunn √© adequado.

-   Seleciona top 5 isolados (baseado na m√©dia da melhor biomassa).

-   No gr√°fico, barras s√£o coloridas pela biomassa da melhor m√©dia.

-   Asterisco vermelho indica isolados significativamente diferentes do melhor isolado.

-   Exporta uma tabela com isolado, biomassa, m√©dia e asterisco.

```{r}
# Pacotes necess√°rios
library(readxl)
library(dplyr)
library(ggpubr)
library(rstatix)
library(ggplot2)
library(openxlsx)
library(patchwork)

# Ler os dados
dados <- read_excel("at_enz.xlsx")

# Converter vari√°veis para fator
dados <- dados %>%
  mutate(
    Enzima = as.factor(Enzima),
    Isolado = as.factor(Isolado),
    Biomassa = as.factor(Biomassa),
    Tubo = as.factor(Tubo),
    Repeticao = as.factor(Repeticao)
  )

# Objeto para armazenar os melhores isolados por estat√≠stica e biomassa
tabela_melhores <- data.frame()

# Loop por enzima
for (enzima in unique(dados$Enzima)) {
  cat("\n\n===== Enzima:", enzima, "=====\n")
  
  subdados <- dados %>% filter(Enzima == enzima)
  
  # Calcular m√©dia da atividade por Isolado e Biomassa
  medias <- subdados %>%
    group_by(Isolado, Biomassa) %>%
    summarise(Media_Atividade = mean(Atividade, na.rm = TRUE), .groups = "drop")
  
  # Para cada isolado, escolher a biomassa com maior m√©dia
  melhores <- medias %>%
    group_by(Isolado) %>%
    slice_max(order_by = Media_Atividade, n = 1) %>%
    ungroup()
  
  # Ordenar pelo topo 5 isolados
  melhores <- melhores %>%
    arrange(desc(Media_Atividade)) %>%
    slice_head(n = 5)
  
  # Teste de normalidade
  shapiro_p <- tryCatch({
    shapiro_test(subdados, Atividade)$p
  }, error = function(e) {
    NA
  })
  
  # Teste de homogeneidade de vari√¢ncias (Levene)
  levene_p <- tryCatch({
    levene_test(subdados, Atividade ~ Isolado)$p
  }, error = function(e) {
    NA
  })
  
  cat("Shapiro-Wilk p-valor:", shapiro_p, "\n")
  cat("Levene p-valor:", levene_p, "\n")
  
  if (!is.na(shapiro_p) && !is.na(levene_p) && shapiro_p > 0.05 && levene_p > 0.05) {
    cat("‚Üí Dados normais e homog√™neos: ANOVA + Tukey\n")
    
    anova <- aov(Atividade ~ Isolado, data = subdados)
    tukey <- TukeyHSD(anova)
    
    tukey_df <- as.data.frame(tukey$Isolado)
    tukey_df$Comparacao <- rownames(tukey_df)
    
    melhor_isolado <- melhores$Isolado[1]
    
    # Isolados que diferem significativamente do melhor isolado
    comparacoes_relevantes <- tukey_df %>%
      filter(grepl(melhor_isolado, Comparacao)) %>%
      mutate(
        outro_isolado = ifelse(grepl(melhor_isolado, Comparacao),
                              sub(".*-", "", Comparacao),
                              sub("-.*", "", Comparacao)),
        signif = `p.adj` < 0.05
      )
    
    isolados_significativos <- comparacoes_relevantes %>%
      filter(signif == TRUE) %>%
      pull(outro_isolado) %>%
      unique()
    
    melhores <- melhores %>%
      mutate(asterisco = ifelse(Isolado %in% isolados_significativos, "*", ""))
    
  } else {
    cat("‚Üí Dados n√£o normais e/ou heterog√™neos: Kruskal-Wallis + Dunn\n")
    
    kruskal <- kruskal_test(subdados, Atividade ~ Isolado)
    print(kruskal)
    
    dunn <- dunn_test(subdados, Atividade ~ Isolado, p.adjust.method = "bonferroni")
    
    melhor_isolado <- melhores$Isolado[1]
    
    # Isolados que diferem significativamente do melhor isolado (p.adj < 0.05)
    isolados_significativos <- dunn %>%
      filter((group1 == melhor_isolado | group2 == melhor_isolado) & p.adj < 0.05) %>%
      mutate(outro_isolado = ifelse(group1 == melhor_isolado, group2, group1)) %>%
      pull(outro_isolado) %>%
      unique()
    
    melhores <- melhores %>%
      mutate(asterisco = ifelse(Isolado %in% isolados_significativos, "*", ""))
  }
  
  # Gr√°fico
  p <- ggplot(melhores, aes(x = reorder(Isolado, -Media_Atividade), y = Media_Atividade, fill = Biomassa)) +
    geom_col() +
    geom_text(aes(label = asterisco), vjust = -0.5, size = 8, color = "red") +
    labs(title = paste("Top 5 Isolados -", enzima),
         x = "Isolado", y = "M√©dia de Atividade", fill = "Biomassa") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  print(p)
  
  # Adicionar coluna de enzima para exporta√ß√£o
  melhores$Enzima <- enzima
  
  # Juntar na tabela final
  tabela_melhores <- bind_rows(tabela_melhores, melhores)
}

# Exportar tabela final com melhores isolados, biomassa e indica√ß√£o de signific√¢ncia
write.xlsx(tabela_melhores, "melhores_isolados_por_estatistica.xlsx", rownames = FALSE)


```

## Visualiza√ß√£o dos melhores isolados

Esse c√≥digo cria um gr√°fico facetado com as m√©dias dos melhores isolados por enzima.

```{r}

# Gr√°fico facetado com todos os melhores isolados
library(readxl)
library(ggplot2)

# Ler arquivo Excel - substitua "dados.xlsx" pelo nome do seu arquivo
df <- read_excel("melhores_isolados_por_estatistica.xlsx")

# Mostrar as primeiras linhas para conferir os dados
head(df)

# Criar gr√°fico de barras facetado com eixos independentes
nomes_enzyme <- c(
  "xil" = "Xilanase",
  "endog" = "Endoglucanase",
  "fpa" = "FPase",
  "lac" = "Lacase",
  "bgli" = "Œ≤ glicosidase",
  "bxil" = "Œ≤ xilosidase",
  "mangper" = "Mangan√™s peroxidase"
)

ggplot(df, aes(x = Isolado, y = Media_Atividade, fill = Biomassa)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
  facet_wrap(~ Enzima, scales = "free", labeller = labeller(Enzima = nomes_enzyme)) +
  labs(
    title = "M√©dias agrupadas por Biomassa",
    fill = "Biomassa",
    caption = "Fonte: Elaborado pela autora, 2025."
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )

```

## Visualiza√ß√£o da identifica√ß√£o a nivel de g√™nero

Quanto a identifica√ß√£o a nivel de g√™nero:

```{r}
# Instalar pacotes, se ainda n√£o tiver
if (!require(readxl)) install.packages("readxl")
if (!require(ggplot2)) install.packages("ggplot2")

library(readxl)
library(ggplot2)

# 1. Carregar o arquivo Excel
# Substitua "arquivo.xlsx" pelo nome real do seu arquivo
dados_tax <- read_excel("cap1.xlsx", sheet = 2)

# 2. Verificar as colunas (opcional)
head(dados_tax)
colnames(dados_tax)

# 3. Calcular a frequ√™ncia dos filos
freq_ordem <- as.data.frame(table(dados_tax$ordem))
colnames(freq_ordem) <- c("ordem", "frequencia")

# 4. Calcular a porcentagem
freq_ordem$porcentagem <- round(100 * freq_ordem$frequencia / sum(freq_ordem$frequencia), 1)

# 5. Criar r√≥tulo para a legenda
freq_ordem$label <- paste0(freq_ordem$ordem, " (", freq_ordem$porcentagem, "%)")

# 6. Gerar o gr√°fico de pizza
ggplot(freq_ordem, aes(x = "", y = frequencia, fill = label)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(caption = "Fonte: Betim, 2025.") +
  theme_void() +
  theme(legend.position = "right") +
  guides(fill = guide_legend(title = "Ordem"))


```
