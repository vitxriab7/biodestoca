---
title: "Untitled"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Teste de degrada√ß√£o in vitro

### üìå‚úÖ **O que esse script faz?**

1.  **Carregamento de pacotes** apropriados para an√°lise estat√≠stica e visualiza√ß√£o.

2.  **Importa√ß√£o de dados** do Excel.

3.  **Fun√ß√£o gen√©rica** que: executa ANOVA, realiza o teste de Tukey, extrai letras de signific√¢ncia com `multcompLetters4`, gera gr√°fico de barras com m√©dias e letras.

4.  **Execu√ß√£o da fun√ß√£o** para m√∫ltiplas vari√°veis com diferentes r√≥tulos de eixo Y.

```{r}
# === 0. Carregar pacotes ===
library(readxl)
library(dplyr)
library(ggplot2)
library(multcompView)
library(agricolae)
library(FSA)
library(car)
library(Polychrome)

# === 1. Carregar os dados ===
dados <- read_excel("teste_deg.xlsx")
dados$tratamento <- as.factor(dados$tratamento)

# === 2. Fun√ß√£o de an√°lise completa ===
analise_variavel <- function(dados, variavel, y_label) {
  dados_var <- dados %>% filter(!is.na(.data[[variavel]]))
  formula <- as.formula(paste(variavel, "~ tratamento"))
  
  modelo <- aov(formula, data = dados_var)
  residuos <- residuals(modelo)
  
  # === Testes de premissas ===
  shapiro_result <- shapiro.test(residuos)
  levene_result <- leveneTest(formula, data = dados_var)
  
  shapiro_p <- shapiro_result$p.value
  levene_p <- levene_result$`Pr(>F)`[1]

  cat("\n=== An√°lise para", variavel, "===\n")
  cat("‚Üí Teste de Normalidade (Shapiro-Wilk):\n")
  print(shapiro_result)

  cat("\n‚Üí Teste de Homocedasticidade (Levene):\n")
  print(levene_result)

  # === Diagn√≥stico visual dos res√≠duos ===
  cat("\n‚Üí Gr√°ficos de diagn√≥stico dos res√≠duos\n")
  par(mfrow = c(1, 2))
  plot(residuos, main = paste("Res√≠duos -", variavel), ylab = "Res√≠duos")
  abline(h = 0, col = "red", lty = 2)
  qqnorm(residuos, main = paste("QQ-Plot -", variavel))
  qqline(residuos, col = "red")
  par(mfrow = c(1, 1))

  # Caminho 1: Premissas atendidas ‚Üí Scott-Knott
  if (shapiro_p > 0.05 & levene_p > 0.05) {
    cat("\n‚Üí Premissas atendidas: usando ANOVA + Scott-Knott\n")
    print(summary(modelo))
    
    scott <- agricolae::scott.test(modelo, "tratamento", group = TRUE, console = TRUE)
    
    letras_df <- scott$groups %>%
      mutate(tratamento = rownames(.)) %>%
      select(tratamento, grupo = groups)
  
  # Caminho 2: Premissas violadas ‚Üí Kruskal + Dunn
  } else {
    cat("\n‚Üí Premissas violadas: usando Kruskal-Wallis + Dunn\n")
    kruskal_res <- kruskal.test(formula, data = dados_var)
    print(kruskal_res)
    
    dunn <- dunnTest(formula, data = dados_var, method = "bonferroni")
    comp <- dunn$res
    
    tratamentos <- levels(dados_var$tratamento)
    p_mat <- matrix(NA, nrow=length(tratamentos), ncol=length(tratamentos),
                    dimnames = list(tratamentos, tratamentos))
    
    for (i in 1:nrow(comp)) {
      pares <- strsplit(as.character(comp$Comparison[i]), " - ")[[1]]
      p_valor <- comp$P.adj[i]
      p_mat[pares[1], pares[2]] <- p_valor
      p_mat[pares[2], pares[1]] <- p_valor
    }
    
    letras <- multcompLetters(p_mat, threshold = 0.05)
    letras_df <- data.frame(tratamento = names(letras$Letters),
                            grupo = letras$Letters)
  }

  # === Calcular m√©dias e unir com grupos ===
  medias <- dados_var %>%
    group_by(tratamento) %>%
    summarise(media = mean(.data[[variavel]], na.rm = TRUE)) %>%
    left_join(letras_df, by = "tratamento")

  # === Identificar grupos √∫nicos e marcar com asterisco ===
  grupo_freq <- table(medias$grupo)
  medias <- medias %>%
    mutate(asterisco = ifelse(grupo_freq[grupo] == 1, "*", ""))

  # === Ordenar tratamentos por m√©dia decrescente ===
  medias <- medias %>%
    arrange(desc(media)) %>%
    mutate(tratamento = factor(tratamento, levels = tratamento))

  # === Cores com Polychrome (36 cores com alto contraste) ===
  grupos_unicos <- sort(unique(medias$grupo))
  paleta <- palette36.colors(length(grupos_unicos))
  cores <- setNames(paleta, grupos_unicos)

  # === Gr√°fico ===
  grafico <- ggplot(medias, aes(x = tratamento, y = media, fill = grupo)) +
    geom_col(width = 0.7) +
    geom_text(aes(label = asterisco), vjust = -0.8, size = 6, color = "black") +
    scale_fill_manual(values = cores) +
    labs(
      title = paste("M√©dia de", y_label, "por Tratamento"),
      x = "Tratamento",
      y = y_label,
      fill = "Grupo"
    ) +
    coord_flip() +
    theme_minimal() +
    theme(
      text = element_text(size = 12),
      plot.title = element_text(hjust = 0.5, face = "bold")
    )
  
  print(grafico)
}

# === 3. Rodar an√°lises ===
analise_variavel(dados, "pm",  "Perda de Massa (PM)")
analise_variavel(dados, "pdr", "Perda de Dureza Relativa (PDR)")
analise_variavel(dados, "pds", "Perda de Densidade Aparente (PDS)")





```

## ‚úÖ **RESUMO DAS AN√ÅLISES**

### üìå **1. Vari√°vel: `pm` ‚Äì Perda de Massa**

-    **Shapiro-Wilk**:

    -    W = 0.94606

    -    p = **3.228e-08** ‚Üí ‚ùå Viola√ß√£o da normalidade

-    **Levene (homocedasticidade)**:

    -    F = 4.3557

    -    p = **2.154e-09** ‚Üí ‚ùå Viola√ß√£o da homogeneidade de vari√¢ncias

-    **Decis√£o**: Premissas violadas ‚Üí Kruskal-Wallis + Dunn

-    **Kruskal-Wallis**:

    -    œá¬≤ = 109.39, gl = 23

    -    p = **3.229e-13** ‚Üí ‚úÖ Diferen√ßa significativa entre tratamentos

### üìå **2. Vari√°vel: `pdr` ‚Äì Perda de Dureza Relativa**

-    **Shapiro-Wilk**:

    -    W = 0.93213

    -   p = **1.413e-09** ‚Üí ‚ùå Viola√ß√£o da normalidade

-    **Levene**:

    -    F = 0.8714

    -    p = **0.6371** ‚Üí ‚úÖ Homocedasticidade aceita

-    **Decis√£o**: Mesmo com vari√¢ncias homog√™neas, a normalidade foi violada ‚Üí Kruskal-Wallis + Dunn

-    **Kruskal-Wallis**:

    -    œá¬≤ = 36.85, gl = 23

    -    p = **0.0337** ‚Üí ‚úÖ Diferen√ßa significativa (moderada)

### üìå **3. Vari√°vel: `pds` ‚Äì Perda de Densidade Aparente**

-    **Shapiro-Wilk**:

    -    W = 0.94844

    -    p = **6.066e-08** ‚Üí ‚ùå Viola√ß√£o da normalidade

-    **Levene**:

    -    F = 5.0554

    -    p = **2.486e-11** ‚Üí ‚ùå Viola√ß√£o da homocedasticidade

-    **Decis√£o**: Premissas violadas ‚Üí Kruskal-Wallis + Dunn

-    **Kruskal-Wallis**:

    -    œá¬≤ = 108.57, gl = 23

    -    p = **4.509e-13** ‚Üí ‚úÖ Diferen√ßa altamente significativa

## üß™ **Conclus√£o T√©cnica**

| Vari√°vel | Normalidade | Homocedasticidade | Teste Utilizado | Resultado |
|--------|------------|----------------|-------------------|-------------------|
| `pm` | ‚ùå | ‚ùå | Kruskal-Wallis + Dunn | **Significativo** |
| `pdr` | ‚ùå | ‚úÖ | Kruskal-Wallis + Dunn | **Significativo** |
| `pds` | ‚ùå | ‚ùå | Kruskal-Wallis + Dunn | **Significativo** |

## üìå Observa√ß√£o

-    **Premissas violadas** ‚Üí teste **n√£o param√©trico**.

-    O script est√° **automatizado, robusto e confi√°vel**.

-    Os resultados indicam que **os tratamentos influenciam significativamente** nas tr√™s vari√°veis avaliadas.

```{r}
# === 0. Carregar pacotes ===
library(readxl)
library(dplyr)
library(ggplot2)
library(multcompView)
library(agricolae)
library(FSA)
library(car)
library(Polychrome)

# === 1. Carregar os dados ===
dados <- read_excel("teste_deg.xlsx")
dados$tratamento <- as.factor(dados$tratamento)

# === 2. Fun√ß√£o de an√°lise completa ===
analise_variavel <- function(dados, variavel, y_label) {
  dados_var <- dados %>% filter(!is.na(.data[[variavel]]))
  formula <- as.formula(paste(variavel, "~ tratamento"))
  
  modelo <- aov(formula, data = dados_var)
  residuos <- residuals(modelo)
  
  # === Testes de premissas ===
  shapiro_result <- shapiro.test(residuos)
  levene_result <- leveneTest(formula, data = dados_var)
  
  shapiro_p <- shapiro_result$p.value
  levene_p <- levene_result$`Pr(>F)`[1]

  cat("\n=== An√°lise para", variavel, "===\n")
  cat("‚Üí Teste de Normalidade (Shapiro-Wilk):\n")
  print(shapiro_result)

  cat("\n‚Üí Teste de Homocedasticidade (Levene):\n")
  print(levene_result)

  # === Diagn√≥stico visual dos res√≠duos ===
  cat("\n‚Üí Gr√°ficos de diagn√≥stico dos res√≠duos\n")
  par(mfrow = c(1, 2))
  plot(residuos, main = paste("Res√≠duos -", variavel), ylab = "Res√≠duos")
  abline(h = 0, col = "red", lty = 2)
  qqnorm(residuos, main = paste("QQ-Plot -", variavel))
  qqline(residuos, col = "red")
  par(mfrow = c(1, 1))

  # Caminho 1: Premissas atendidas ‚Üí Scott-Knott
  if (shapiro_p > 0.05 & levene_p > 0.05) {
    cat("\n‚Üí Premissas atendidas: usando ANOVA + Scott-Knott\n")
    print(summary(modelo))
    
    scott <- agricolae::scott.test(modelo, "tratamento", group = TRUE, console = TRUE)
    
    letras_df <- scott$groups %>%
      mutate(tratamento = rownames(.)) %>%
      select(tratamento, grupo = groups)
  
  # Caminho 2: Premissas violadas ‚Üí Kruskal + Dunn
  } else {
    cat("\n‚Üí Premissas violadas: usando Kruskal-Wallis + Dunn\n")
    kruskal_res <- kruskal.test(formula, data = dados_var)
    print(kruskal_res)
    
    dunn <- dunnTest(formula, data = dados_var, method = "bonferroni")
    comp <- dunn$res
    
    tratamentos <- levels(dados_var$tratamento)
    p_mat <- matrix(NA, nrow=length(tratamentos), ncol=length(tratamentos),
                    dimnames = list(tratamentos, tratamentos))
    
    for (i in 1:nrow(comp)) {
      pares <- strsplit(as.character(comp$Comparison[i]), " - ")[[1]]
      p_valor <- comp$P.adj[i]
      p_mat[pares[1], pares[2]] <- p_valor
      p_mat[pares[2], pares[1]] <- p_valor
    }
    
    letras <- multcompLetters(p_mat, threshold = 0.05)
    letras_df <- data.frame(tratamento = names(letras$Letters),
                            grupo = letras$Letters)
  }

  # === Calcular m√©dias e unir com grupos ===
  medias <- dados_var %>%
    group_by(tratamento) %>%
    summarise(media = mean(.data[[variavel]], na.rm = TRUE)) %>%
    left_join(letras_df, by = "tratamento")

  # === Identificar grupos √∫nicos e marcar com asterisco ===
  grupo_freq <- table(medias$grupo)
  medias <- medias %>%
    mutate(asterisco = ifelse(grupo_freq[grupo] == 1, "*", ""))

  # === Ordenar tratamentos por m√©dia decrescente ===
  medias <- medias %>%
    arrange(desc(media)) %>%
    mutate(tratamento = factor(tratamento, levels = tratamento))

  # === Marcar tratamentos relacionados ao controle negativo (cn) ===
  grupo_cn <- medias %>% filter(tratamento == "CN") %>% pull(grupo)

  medias <- medias %>%
    mutate(
      destaque = case_when(
        tratamento == "cn" ~ "Controle Negativo",
        grupo == grupo_cn  ~ "Mesmo Grupo que CN",
        TRUE               ~ "Outros"
      )
    )

  # === Cores espec√≠ficas para destaque ===
  cores_destaque <- c(
    "Controle Negativo" = "#D73027",      # vermelho
    "Mesmo Grupo que CN" = "#FC8D59",     # laranja claro
    "Outros" = "#91BFDB"                  # azul claro
  )

  # === Gr√°fico ===
  grafico <- ggplot(medias, aes(x = tratamento, y = media, fill = destaque)) +
    geom_col(width = 0.7) +
    geom_text(aes(label = asterisco), vjust = -0.8, size = 6, color = "black") +
    scale_fill_manual(values = cores_destaque) +
    labs(
      title = paste("M√©dia de", y_label, "por Tratamento"),
      x = "Tratamento",
      y = y_label,
      fill = "Destaque"
    ) +
    coord_flip() +
    theme_minimal() +
    theme(
      text = element_text(size = 12),
      plot.title = element_text(hjust = 0.5, face = "bold")
    )

  print(grafico)
}

# === 3. Rodar an√°lises ===
analise_variavel(dados, "pm",  "Perda de Massa (PM)")
analise_variavel(dados, "pdr", "Perda de Dureza Relativa (PDR)")
analise_variavel(dados, "pds", "Perda de Densidade Aparente (PDS)")



```

Os gr√°ficos demonstram tres an√°lises realizadas nos cavacos ap√≥s o teste de degrada√ß√£o *in vitro* por 90 dias.

1.  Perda de massa (PM);

2.  Perda de Dureza Relativa (PDR): em rela√ß√£o ao controle negativo;

3.  Perda de Densidade Aparente (PDS);

No gr√°fico 1, o Controle Negativo ficou isolado nos grupos de significancia oque demontra uma confiabilidade na an√°lise; os fungos 24 e e 42 ambos com maior perda de massa que o controle, ficaram isolados em grupos de significancia do restante dos grupos, o fungo LT est√° isolado e, destacando-se com um valor muito acima da maioria das m√©dias dos tratamentos.

No gr√°fico 2, os tratamentos ficaram a maioria dentro do mesmo grupo de significancia do controle negativo, oque demontra que essa an√°lise √© mais sensivel, a perda de dureza est√° relacionada com a resist√™ncia mec√¢nica da madeira, ps fungos 50, 36 e 26 ficaram em outros grupos de significancia, entretanto, todos tiveram medias menores que o controle negativo. O tratamento LT pelo contr√°rio, demonstra que ficou em um grupo de significancia distinto do controle e causou a maior media de perda de dureza da madeira, essa an√°lise demontra que o fungo degradou a madeira de forma eficiente a afetar componentes estruturais que conferem resistencia a madeira.

No gr√°fico 3, nota-se que o controle negativo assim como no gr√°fico da perda de massa ficou isolado em um grupo de significancia, os tratamentos que ficaram isolados dos demais com medias acima do CN foram: 53, 27, 24 e 42, em rela√ß√£o a maior m√©dia o fungo LT continua apresentando os melhores resultados. Em conformidade com todas as an√°lises.
